


[int,float,char,ptr]
aaB, ==, Lhc.Order.Eq, ==
# aaB, /=, Lhc.Order.Eq, !=
aaB, >=, Lhc.Order.Ord, >=
aaB, <=, Lhc.Order.Ord, <=
aaB, >, Lhc.Order.Ord, >
aaB, <, Lhc.Order.Ord, <


[int,float]
aaa, +, Lhc.Num.Num, +
aaa, -, Lhc.Num.Num, -
aaa, *, Lhc.Num.Num, *
aa, negate, Lhc.Num.Num, -
# 1, abs, Lhc.Num.Num, abs
# 1, signum, Lhc.Num.Num, abs

[int]
aaa, .&., Data.Bits.Bits, &
aaa, .|., Data.Bits.Bits, |
aaa, xor, Data.Bits.Bits, ^
aa, complement, Data.Bits.Bits, ~
aaa, quot, Lhc.Num.Integral, /
aaa, rem, Lhc.Num.Integral, %
aaa, div, Lhc.Num.Integral, /
aaa, mod, Lhc.Num.Integral, %
aIa, shiftL, Data.Bits.Bits, <<
aIa, shiftR, Data.Bits.Bits, >>


# [float]
# aaa, /, Lhc.Num.Fractional, /

